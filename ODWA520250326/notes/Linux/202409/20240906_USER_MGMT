How many types of users are there within the Linux operating system?
There are 2 types of users are supported by Linux
1. Root User
2. Normal User
	
	
1. Root user
root user is the super user of the linux operating system machine, and he has un-restricted access to all the services and resources of the Linux operating system computer. He can perform
	1. user management = creating, modifying and deleting users and their permissions
	2. File system management = can see, modify the contents of the file and change access permissions of any files granting/revoking the access to the files for other users
	3. process management = can see and control any process that belongs to any users of the linux machine
	4. device management
	5. system configuration management
	etc
	
during the time of installing the linux operating system, it prompts for username and the password. With username and password, the linux will does #2 things:
	1. it creates/setup the root user with the password that we supplied above with always the root user created with username as "root" only
	2. in addition it creates one more normal user (with elevated sudo access: may not be same across all the distros, but applicable for debain ubuntu) with the username and password we supplied above allowing us to access the linux machine using that user
	
Does the root user is permitted to directly login into Linux operating system machine?
Linux doesnt permits the user to login directly into the operating system as "root", as it poses a risk in performing accidental operations that leads to the crash or lost of information/settings within the system.
		
There could be always a chance where user while performing operation he/she could accidental might endup in deleting or modifying the system configuration files/settings that leads to crash of the machine. To avoid this the linux doesnt permits the users to login as root, so that the accidental deletions will be aborted with permission denied error by default.
	
If the user desperately wanted to perform the operation of modifying some operating system configuration, then let the user switch to root and carry out the operations.
	

How can a normal user of the linux operating system can switch as root in performing super user operations/actions?	
use su username

su stands for switch user, we can use su to switch to an another user of the linux operating system within the bash prompt.
	
if we want to switch as a root user, we need to use
su -	
here "-" indicates switch as root user.
	
Note: There can be only one root user per a Linux operating system machine and the name of the root user is always "root" and the home directory for the root user is /root
-------------------------------------------------------------------------------------------------------------------------
#2. Normal user
The root user can add other users into the linux operating system machine, and these users are considered as "normal" users of the linux operating system.
The normal user will have access to their own home directory only, can create,view or modify the files within their home directory. Even the normal user cannot see the process that are launched by the other users of the linux operating system machine.
	
For all the users of the Linux operating system, it captures and stores few attributes of data as below
1. uid = unique id that is generated by the linux operating system while creating an user and is used for identifying the user
2. username = label associated with uid, that can be memorized and used for logging into the computer
3. password = used for authenticating and gaining access to the machine/resources
4. default bash interpreter
5. home directory
-------------------------------------------------------------------------------------------------------------------------

From the above discussion we went through we can understand pretty each Linux operating system user is being kept isolated from other users of the Linux apart from "root". this means a File/folder or process that belongs to one Linux user cannot be seen/modified/accessed by other users of the linux

But in a coporate environment, this may not work, Because group of employees working within a corporate has to have access to the files/folders that are created by the other users inorder to collaborate and work within the environment. 
	
So the job of granting access permissions letting one user to see/access files/folders to the others users can be done by the owner of file or directory. But managing the access permissions, grant/revoking them to the individual users of the linux operating system becomes tedious job, so to help us in granting/revoking the access an file/folder of an user to the others users of the linux operating, linux has introduced groups.
	
We can create a group and assign users of similar access requirements based on their nature of work and can manage permissions in granting/revoking the access to an file/folder easily. 
	1. developergroup = all the developers can be created under one group
	2. administratorsgroup
	etc
	
So there are #3 entities in linux operating system:
1. root user
2. normal user
3. groups
--------------------------------------------------------------------------------------------------------------------------
What are the attributes of data being attached to a user or a group?
Root user can create additional users or groups in the linux operating system. At the time of creating a user, the linux takes few attributes of data, stores or associates to the user while creating/storing it.
	
While creating an user:
Each user is being associated with below attributes:
1. uid = For each user a unique id is generated and associated with the user. 
2. username = each user is assigned with a unique username that acts as an label for the uid of the user through which we can identify the user quickly
3. password = used for authenticating the user inorder to grant access to the machine/operating system
4. home directory
5. shell interpreter

for a group also, few attributes of data being associated when we create a group:
1. gid = group id will be auto-generated and associated for each group we create in linux operating system machine
2. groupname = each group is being uniquely identified with the given groupname

The user and the groups information that we have created within the linux operating system is stored under
/etc/passwd = all the users information
/etc/group = all the groups of the linux machine


Few more important aspects related to "root" user of the linux operating system:
1. There can be only one root user could existence per one linux operating system machine and he has total control of all the system resources/services of that Linux machine, so everything lies under one place or under one control which is "root".
2. The root user is created during the installation of the linux operating system itself with the password we supplied during the install
3. The root user home directory location is quite different from other users of the linux system.
	 The root home directory is : "/root"
	 for all the other linux users the default home directory is "/home/$USER"
4. Always	the root user is identified with username as "root" only, and cant be changed
5. The root user of the linux operating system is associated with an uid as always "0" only. Whichever the user within the linux operating system has uid = 0 is identified by the linux as "Root"
-------------------------------------------------------------------------------------------------------------------------
How to create or add a user into the Linux operating system?

The root user only can add new or other users into the Linux operating system machine. While adding an user, the linux performs few activities automatically as below.
		 
1. The Linux operating system generates an uid automatically by increment last generated uid, it fetches the last generated uid from /etc/passwd, increments and associates to the user it is adding

2. every linux user must and should be associated with a group (primary group/default group). For this Linux operating system while adding the user creates an group with the same name of the user.
while creating this group, it generates gid automatically by fetching last generated gid from /etc/group increments it and associates to the group.
	
Then associates the user to the group it has created while adding the user.
	
3. for every user that we create, linux operating system will creates an default home directory for the user under /home/$USER

4. for every user that we create, linux will associates an default shell interpreter for the user (default: /bin/sh)
	

The root user only can add other users of the linux operating system, because all the commands related to user management are part of /sbin directory for which only the root has access

There are 2 ways of adding or creating users are there in Linux operating system
1. useradd 
2. adduser

#1. useradd
useradd is the core system linux command/utility provided by the linux operating system aspart of the bash interpreter. by default when we add a user using useradd, it performs below activities in adding the user:
1. it creates an group with the username we provided by generating an gid
2. then it creates an user with username supplied by generating uid and associates the user to the (default) group created above
3. while creating the user, the useradd doesnt prompts for login password for the user, which means the user is created without any password
4. the user will not be associated with home directory
since the user doesnt have password and an home directory, the user cannot login directly into the system.

#purpose?
	
If we wish to have the user created with home directory and password and enable him to login and access the machine directly we need to perform few more steps manually as below.
1. switch to the root user by running sudo su - (prompt: root password)	
2. goto /home directory
3. create an new home directory under the /home with name as username of the user we added above. 
For eg.. if we have created an new user above with username as "jack", then create an home directory for the jack under /home/jack

mkdir /home/jack
4. now change the group/ower for the new created directory to jack user and jack group itself 
chmod jack:jack /home/jack

5. reset the password for the user jack 
passwd jack = it prompts for the new password to be added to the user jack
upon completing the above activities manually we should be able to login into the linux system as jack
-------------------------------------------------------------------------------------------------------------------------

Instead of we performing the above steps manually in creating the user, there are few switches (options) provided aspart of the useradd command that we can use in creating the user as below

-m = indicates create the home directory for the user also (this creating the home directory for the user under /home/$USER)
	
-d location = if we dont specify the location, the default location will be /home/$USER, but incase if we wish to have a different home directory location other than /home, we can use -d location option

-s shell = the default shell interpreter is /bin/sh, we can change this by using -s option

-p password = creates the user directly with the supplied password
              (but, the -p option always treats the password that we supplied as crypt(3) enrypted password with which it creates the user)
	welcome1 (encrypted password)
	

How to supply encrypted password in creating the user?
There are #2 options we have:
#1 option:
create user with useradd without password and then reset the password after creating.
	
sudo useradd -m -s /bin/bash jack
sudo passwd jack #reset 

#2 option
1. we can generate an encrypted password using openssl passwd command as below
openssl passwd -6 passwordToEncrypt

this command generates an encrypted password of the given password, then use this encrypted password while adding the user in single quote as shown below

useradd -m -s shell -p 'encryptedPassword' username
-------------------------------------------------------------------------------------------------------------------------
#2. adduser

By using useradd, even though we can add a user, it is a little tedious job and should perform few operations manually after creating the user, instead debain (ubuntu) distro has provided an handy utility "adduser"
	
adduser is also an /sbin (super user) command and requires sudoers access inorder to execute it
sudo adduser username
#sudo adduser matt

upon running the above bash utility, it prompts for bunch of inputs along with password and creates the user into the Linux operating system machine. its the most cleanest and quickest way of creating the user
--------------------------------------------------------------------------------------------------------------------------
1. how to know the details of an user we have created or any other user in the linux operating system machine?
We want to know the user information like
1. uid
2. gid
3. primary group
4. other groups into which the user is associated (part-of)
	
id = identity information of an user
the id command shows the current logged in user information with all the details described above

id username = that username specific identification info will be shown

2. How to find the groups in which an user is there?
groups username
this command shows all the groups in which the user is associated with.
	
if we just use groups without passing username, it shows the groups of the currently logged in user	


3. How to create a new group in the linux operating system machine?
only the root or sudoer can create a group in linux operating system machine

groupadd groupname

for eg.. we can create an devopsgroup using the below command

groupadd devopsgroup

with this command a new group called "devopsgroup" will be created by associating an auto-generated gid for the group by incrementing the last generated gid + 1 from /etc/group

4. How to create a new group with specific gid, rather than auto-generated gid?
groupadd -g gid	groupName
this will create a new group with the supplied gid 

5. How to add a new user with a specified/supplied uid instead of auto-generated uid?
sudo useradd	-m -s shell -u uid username

6. how to create a user with in an existing group instead of the default group of the user?
by default useradd creates an new group for the user with groupname as username and associates the user to that usergroup, but if we want a user to be created with primary group as one of the existing group we need to supply gid of the group to which we want the user to be associated at the time of creating the user as below.
	
sudo useradd -m -s /bin/bash -g gid bob

7. How to delete an existing user?
there are #2 commands to delete an existing user
1. userdel username = core linux system command
2. deluser username = debain (ubuntu) distro command 
	
deluser --remove-home username =cleans up the home directory along with deleting the user
both of these are superuser commands and can be used by only root or sudoer

when we execute the above commands in deleting an user:
2. if the user associated primary group has only the user as a member with no one in that group, then the group is considered as orphan and will be removed
3. the home directory of the user will not be deleted by default, since the files/folders inside the home directory of the user is being used/accessed by other users of the linux. we should explicitly use --remove-home with adduser to delete the home directory


8. How to add an group to an existing user?
We have an existing user associated with an primary group already. Now we want to add the user into another group other than primary group, this can be done user usermod

For eg.. we have joe user created in joe group, now we want to add joe into devopsgroup also, this can be done using the below command:

usermod -aG grp1, grp2, grp3 username
usermod stands for modify user, here -a stands for add operation/action and G indicates group which means modify the user and add him into Group specified

usermod -aG devopsgroup joe

9. How to rename an existing user?
usermod -l newusername oldusername

here -l stands for login name of the user, so usermod means modify user login name

10 How to delete an existing group?
if there are no users associated with the group as primary group, then only we can delete group
groupdel groupname

11. How to change the password of an existing user?
passwd username

12. How to change the uid of an existing user?
usermod -u uid username

13. How to reset the groups of the user instead of adding the user into one more group.
for eg..
joseph is in primary group joseph and in other groups "devopsgroup", "supportgroup"... Now we want to reset all the groups of joseph and want to add him into developersgroup. here we dont want primary group to change only all the groups we want to reset

usermod -G groupName username

14. How to remove an user from a group?
gpasswd -d user group = delete the user from the group
gpasswd -a user group = add the user into the group





























































	


























	
	
	




		 






























































		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		